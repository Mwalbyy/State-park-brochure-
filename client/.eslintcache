[{"C:\\Users\\Dylan\\Desktop\\project3-group1\\state-park-brochure\\client\\src\\index.js":"1","C:\\Users\\Dylan\\Desktop\\project3-group1\\state-park-brochure\\client\\src\\App.js":"2","C:\\Users\\Dylan\\Desktop\\project3-group1\\state-park-brochure\\client\\src\\components\\pages\\Weather.js":"3","C:\\Users\\Dylan\\Desktop\\project3-group1\\state-park-brochure\\client\\src\\components\\pages\\posts\\Posts.js":"4","C:\\Users\\Dylan\\Desktop\\project3-group1\\state-park-brochure\\client\\src\\components\\pages\\SinglePost.js":"5","C:\\Users\\Dylan\\Desktop\\project3-group1\\state-park-brochure\\client\\src\\components\\pages\\Profile.js":"6","C:\\Users\\Dylan\\Desktop\\project3-group1\\state-park-brochure\\client\\src\\components\\pages\\home\\Home.js":"7","C:\\Users\\Dylan\\Desktop\\project3-group1\\state-park-brochure\\client\\src\\components\\WeatherCard.js":"8","C:\\Users\\Dylan\\Desktop\\project3-group1\\state-park-brochure\\client\\src\\components\\Navbar.js":"9","C:\\Users\\Dylan\\Desktop\\project3-group1\\state-park-brochure\\client\\src\\utils\\queries.js":"10"},{"size":230,"mtime":1651075394317,"results":"11","hashOfConfig":"12"},{"size":1072,"mtime":1651075394258,"results":"13","hashOfConfig":"12"},{"size":1302,"mtime":1651156961881,"results":"14","hashOfConfig":"12"},{"size":1304,"mtime":1651075394315,"results":"15","hashOfConfig":"12"},{"size":116,"mtime":1650896383513,"results":"16","hashOfConfig":"12"},{"size":127,"mtime":1651075394261,"results":"17","hashOfConfig":"12"},{"size":4087,"mtime":1651075394262,"results":"18","hashOfConfig":"12"},{"size":835,"mtime":1651157192686,"results":"19","hashOfConfig":"12"},{"size":2683,"mtime":1651075394260,"results":"20","hashOfConfig":"12"},{"size":287,"mtime":1651075394318,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"jsewgc",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\Dylan\\Desktop\\project3-group1\\state-park-brochure\\client\\src\\index.js",[],["45","46"],"C:\\Users\\Dylan\\Desktop\\project3-group1\\state-park-brochure\\client\\src\\App.js",[],"C:\\Users\\Dylan\\Desktop\\project3-group1\\state-park-brochure\\client\\src\\components\\pages\\Weather.js",["47"],"import React, { useEffect, useState } from 'react'\r\nimport WeatherCard from '../WeatherCard'\r\nimport Navbar from '../Navbar'\r\n\r\n\r\nexport default function Weather() {\r\n  const APIKey = \"eeb5a4f4f32c1f7a190544a866cbdd0c\"\r\n  \r\n  const [forecastData, setForecastData] = useState([])\r\n\r\n  function renderForecast(forecast) {\r\n    const forecastArray = []\r\n    for (let i = 0; i < 5; i++) {\r\n      const day = {\r\n        key: i,\r\n        temp: forecast.daily[i].temp.day,\r\n        humidity: forecast.daily[i].humidity,\r\n        description: forecast.daily[i].weather[0].main,\r\n        picture: forecast.daily[i].weather[0].icon\r\n      }\r\n      forecastArray.push(day)\r\n    }\r\n    setForecastData(forecastArray)\r\n  }\r\n\r\n  // change laty and long to state park location\r\n  let apiurl = `https://api.openweathermap.org/data/2.5/onecall?lat=40.8482&lon=73.9976&units=imperial&exclude=minutely,hourly&appid=${APIKey}`;\r\n  async function getWeatherData () {\r\n    const response = await fetch(apiurl)\r\n    const data = await response.json()\r\n    renderForecast(data)\r\n  }\r\n  useEffect(() => {\r\n    getWeatherData()\r\n    \r\n  }, [])\r\n  return (\r\n    <>\r\n    <Navbar/>\r\n      {forecastData.map((singleDay) => {\r\n        return <WeatherCard weather={singleDay} key={singleDay.key}/>\r\n      })}\r\n    </> \r\n  )\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\Dylan\\Desktop\\project3-group1\\state-park-brochure\\client\\src\\components\\pages\\posts\\Posts.js",["48"],"import { Link } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport React from 'react'\r\nimport { QUERY_POSTS } from '../../../utils/queries'\r\nimport './style/Posts.css'\r\nimport Navbar from \"../../Navbar\"\r\n\r\nconst Posts = () => {\r\n  const { loading, data } = useQuery(QUERY_POSTS, {\r\n    fetchPolicy: 'no-cache'\r\n  });\r\n\r\n  const postList = data?.posts || [];\r\n  console.log(postList);\r\n  console.log(data);\r\n\r\n  return (\r\n    <>\r\n    <Navbar/>\r\n    <div className='container'>\r\n      <h1 className='posth1'>Welcome to the Posts Page</h1>\r\n      <button className='addBtn'>Add Post</button>\r\n      <div className=\"card-body m-5\">\r\n        <h2>Here is a list of all available posts</h2>\r\n          {loading ? (\r\n            <div>Loading...</div>\r\n          ) : (\r\n            <ul className='square'>\r\n              {postList.map((post) => {\r\n                return (\r\n                  <li className='postList' key={post._id}>\r\n                    {post.postText}\r\n                     <br></br>\r\n                     <br></br> \r\n                     By: {post.postAuthor}\r\n                  </li>\r\n                )\r\n              })} \r\n              </ul>\r\n          )}\r\n      </div>\r\n        \r\n          \r\n        \r\n\r\n\r\n    </div>\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nexport default Posts;","C:\\Users\\Dylan\\Desktop\\project3-group1\\state-park-brochure\\client\\src\\components\\pages\\SinglePost.js",[],"C:\\Users\\Dylan\\Desktop\\project3-group1\\state-park-brochure\\client\\src\\components\\pages\\Profile.js",[],"C:\\Users\\Dylan\\Desktop\\project3-group1\\state-park-brochure\\client\\src\\components\\pages\\home\\Home.js",[],"C:\\Users\\Dylan\\Desktop\\project3-group1\\state-park-brochure\\client\\src\\components\\WeatherCard.js",["49","50"],"C:\\Users\\Dylan\\Desktop\\project3-group1\\state-park-brochure\\client\\src\\components\\Navbar.js",[],"C:\\Users\\Dylan\\Desktop\\project3-group1\\state-park-brochure\\client\\src\\utils\\queries.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":36,"column":6,"nodeType":"57","endLine":36,"endColumn":8,"suggestions":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":10,"nodeType":"61","messageId":"62","endLine":1,"endColumn":14},{"ruleId":"59","severity":1,"message":"63","line":12,"column":11,"nodeType":"61","messageId":"62","endLine":12,"endColumn":17},{"ruleId":"64","severity":1,"message":"65","line":28,"column":9,"nodeType":"66","endLine":28,"endColumn":43},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getWeatherData'. Either include it or remove the dependency array.","ArrayExpression",["69"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'center' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [getWeatherData]",{"range":"72","text":"73"},[1114,1116],"[getWeatherData]"]