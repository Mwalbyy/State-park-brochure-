[{"C:\\Users\\marcu\\BootCamp\\state-park-brochure\\client\\src\\index.js":"1","C:\\Users\\marcu\\BootCamp\\state-park-brochure\\client\\src\\App.js":"2","C:\\Users\\marcu\\BootCamp\\state-park-brochure\\client\\src\\components\\pages\\Weather.js":"3","C:\\Users\\marcu\\BootCamp\\state-park-brochure\\client\\src\\components\\pages\\SinglePost.js":"4","C:\\Users\\marcu\\BootCamp\\state-park-brochure\\client\\src\\components\\pages\\Profile.js":"5","C:\\Users\\marcu\\BootCamp\\state-park-brochure\\client\\src\\components\\pages\\home\\Home.js":"6","C:\\Users\\marcu\\BootCamp\\state-park-brochure\\client\\src\\components\\pages\\posts\\Posts.js":"7","C:\\Users\\marcu\\BootCamp\\state-park-brochure\\client\\src\\components\\Navbar.js":"8","C:\\Users\\marcu\\BootCamp\\state-park-brochure\\client\\src\\utils\\queries.js":"9","C:\\Users\\marcu\\BootCamp\\state-park-brochure\\client\\src\\components\\WeatherCard.js":"10"},{"size":230,"mtime":1650992191885,"results":"11","hashOfConfig":"12"},{"size":1072,"mtime":1651079948180,"results":"13","hashOfConfig":"12"},{"size":1261,"mtime":1651075678656,"results":"14","hashOfConfig":"12"},{"size":116,"mtime":1650851148143,"results":"15","hashOfConfig":"12"},{"size":127,"mtime":1650999385518,"results":"16","hashOfConfig":"12"},{"size":5400,"mtime":1651081697474,"results":"17","hashOfConfig":"12"},{"size":1304,"mtime":1651077585186,"results":"18","hashOfConfig":"12"},{"size":2683,"mtime":1651066655791,"results":"19","hashOfConfig":"12"},{"size":287,"mtime":1651066655793,"results":"20","hashOfConfig":"12"},{"size":738,"mtime":1651075678656,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"gzsll7",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\marcu\\BootCamp\\state-park-brochure\\client\\src\\index.js",[],["45","46"],"C:\\Users\\marcu\\BootCamp\\state-park-brochure\\client\\src\\App.js",[],"C:\\Users\\marcu\\BootCamp\\state-park-brochure\\client\\src\\components\\pages\\Weather.js",["47"],"import React, { useEffect, useState } from 'react'\r\nimport WeatherCard from '../WeatherCard'\r\n\r\n\r\nexport default function Weather() {\r\n  const APIKey = \"eeb5a4f4f32c1f7a190544a866cbdd0c\"\r\n  \r\n  const [forecastData, setForecastData] = useState([])\r\n\r\n  function renderForecast(forecast) {\r\n    const forecastArray = []\r\n    for (let i = 0; i < 5; i++) {\r\n      const day = {\r\n        key: i,\r\n        temp: forecast.daily[i].temp.day,\r\n        humidity: forecast.daily[i].humidity,\r\n        description: forecast.daily[i].weather[0].main,\r\n        picture: forecast.daily[i].weather[0].icon\r\n      }\r\n      forecastArray.push(day)\r\n    }\r\n    setForecastData(forecastArray)\r\n  }\r\n\r\n  // change laty and long to state park location\r\n  let apiurl = `https://api.openweathermap.org/data/2.5/onecall?lat=40.8482&lon=73.9976&units=imperial&exclude=minutely,hourly&appid=${APIKey}`;\r\n  async function getWeatherData () {\r\n    const response = await fetch(apiurl)\r\n    const data = await response.json()\r\n    renderForecast(data)\r\n  }\r\n  useEffect(() => {\r\n    getWeatherData()\r\n    \r\n  }, [])\r\n  return (\r\n    <div>\r\n      {forecastData.map((singleDay) => {\r\n        return <WeatherCard weather={singleDay} key={singleDay.key}/>\r\n      })}\r\n    </div> \r\n  )\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\marcu\\BootCamp\\state-park-brochure\\client\\src\\components\\pages\\SinglePost.js",[],"C:\\Users\\marcu\\BootCamp\\state-park-brochure\\client\\src\\components\\pages\\Profile.js",[],"C:\\Users\\marcu\\BootCamp\\state-park-brochure\\client\\src\\components\\pages\\home\\Home.js",["48"],"C:\\Users\\marcu\\BootCamp\\state-park-brochure\\client\\src\\components\\pages\\posts\\Posts.js",["49"],"import { Link } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport React from 'react'\r\nimport { QUERY_POSTS } from '../../../utils/queries'\r\nimport './style/Posts.css'\r\nimport Navbar from \"../../Navbar\"\r\n\r\nconst Posts = () => {\r\n  const { loading, data } = useQuery(QUERY_POSTS, {\r\n    fetchPolicy: 'no-cache'\r\n  });\r\n\r\n  const postList = data?.posts || [];\r\n  console.log(postList);\r\n  console.log(data);\r\n\r\n  return (\r\n    <>\r\n    <Navbar/>\r\n    <div className='container'>\r\n      <h1 className='posth1'>Welcome to the Posts Page</h1>\r\n      <button className='addBtn'>Add Post</button>\r\n      <div className=\"card-body m-5\">\r\n        <h2>Here is a list of all available posts</h2>\r\n          {loading ? (\r\n            <div>Loading...</div>\r\n          ) : (\r\n            <ul className='square'>\r\n              {postList.map((post) => {\r\n                return (\r\n                  <li className='postList' key={post._id}>\r\n                    {post.postText}\r\n                     <br></br>\r\n                     <br></br> \r\n                     By: {post.postAuthor}\r\n                  </li>\r\n                )\r\n              })} \r\n              </ul>\r\n          )}\r\n      </div>\r\n        \r\n          \r\n        \r\n\r\n\r\n    </div>\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nexport default Posts;","C:\\Users\\marcu\\BootCamp\\state-park-brochure\\client\\src\\components\\Navbar.js",[],"C:\\Users\\marcu\\BootCamp\\state-park-brochure\\client\\src\\utils\\queries.js",[],"C:\\Users\\marcu\\BootCamp\\state-park-brochure\\client\\src\\components\\WeatherCard.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":35,"column":6,"nodeType":"56","endLine":35,"endColumn":8,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":5,"column":8,"nodeType":"60","messageId":"61","endLine":5,"endColumn":12},{"ruleId":"58","severity":1,"message":"62","line":1,"column":10,"nodeType":"60","messageId":"61","endLine":1,"endColumn":14},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getWeatherData'. Either include it or remove the dependency array.","ArrayExpression",["65"],"no-unused-vars","'topo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [getWeatherData]",{"range":"68","text":"69"},[1082,1084],"[getWeatherData]"]